numpy functions
np.random.uniform
np.where


pandas functions
- pd.crosstab
- pd.melt
- point of jitters



seaborn elements
g.map_upper
g.map_lower
g.map_diag



PCA

assumes linear relationship

rotation axes are not dependent on each other

one major component is the first one


cos(theta) = hypotenuse
sin(theta) = hypotenuse

imagine straight line going through origin

if you want component of line of x -> l cos theta
if you want component of line of y -> l sin theta



Naive Bayes

probability of people watching a video

start with assumption of prior -> can assume anything -> can assume normal distribution

do computation on whatever you are observing

using a prior to compute something that is the opposite

multiplies each feature ->

training set is larger
60 - 40
train set -> apply folds


testing set is holdout group
holdout group is applied to the testing set
    - always part you are leaving behind

training on 3 folds and testing on holdout data set

test set is holdout data set





go over hypothesis tests
AA test
AB test
testing a website
opening a coffee shop
    - new billboard, change old one
        - how can you test if the new one is better than the old one

